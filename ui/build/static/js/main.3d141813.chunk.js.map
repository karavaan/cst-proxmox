{"version":3,"sources":["components/vmForm.js","components/current-vms.js","components/vm-container.js","components/user-container.js","components/pools.js","App.js","reportWebVitals.js","index.js"],"names":["VmForm","callback","useState","isoValues","setIsoValues","iso","setIsoForm","name","setNameForm","ram","setRamForm","cpuSockets","setCpuSocketsForm","cpuCores","setCpuCoresForm","hardDiskSize","setHardDiskSizeForm","useEffect","fetch","then","x","json","data","noValidate","autoComplete","onSubmit","e","preventDefault","style","display","width","TextField","id","label","value","placeholder","onChange","target","type","FormControl","InputLabel","Select","labelId","map","item","MenuItem","volid","CurrentVms","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","VmContainer","vms","setVms","formOpen","setFormOpen","vm","state","Button","variant","color","onClick","height","UserContainer","setValue","input","split","a","q","trim","multiline","rows","margin","Pools","available","setAvailable","pool","setPools","method","headers","body","JSON","stringify","poolid","App","users","setUsers","setPool","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGO,SAASA,EAAT,GAA6B,IAAZC,EAAW,EAAXA,SAAW,EACGC,qBADH,mBACxBC,EADwB,KACbC,EADa,OAELF,qBAFK,mBAExBG,EAFwB,KAEnBC,EAFmB,OAGHJ,qBAHG,mBAGxBK,EAHwB,KAGlBC,EAHkB,OAILN,qBAJK,mBAIxBO,EAJwB,KAInBC,EAJmB,OAKSR,qBALT,mBAKxBS,EALwB,KAKZC,EALY,OAMKV,qBANL,mBAMxBW,EANwB,KAMdC,EANc,OAOaZ,qBAPb,mBAOxBa,EAPwB,KAOVC,EAPU,KAS/BC,qBAAU,WACNC,MAAM,kBAAkBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAI,OAAIlB,EAAakB,QACvE,IAOH,OAAKnB,EAKD,uBAAMoB,YAAU,EAACC,aAAa,MAAMC,SAVvB,SAACC,GACdA,EAAEC,iBACF1B,EAAS,CAACI,MAAKE,OAAME,MAAKI,WAAUF,aAAYI,kBAQQa,MAAO,CAACC,QAAS,cAAeC,MAAO,KAA/F,UACI,cAACC,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,OAAOC,MAAO3B,EAAM4B,YAAY,gBAAiBC,SAAU,SAACV,GAAD,OAAOlB,EAAYkB,EAAEW,OAAOH,UAC5H,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,MAAMK,KAAK,SAASJ,MAAOzB,EAAK0B,YAAa,KAAOC,SAAU,SAACV,GAAD,OAAOhB,EAAWgB,EAAEW,OAAOH,UAC9H,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,cAAcK,KAAK,SAASJ,MAAOvB,EAAYwB,YAAa,EAAIC,SAAU,SAACV,GAAD,OAAOd,EAAkBc,EAAEW,OAAOH,UACjJ,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,YAAYK,KAAK,SAASJ,MAAOrB,EAAUsB,YAAa,EAAIC,SAAU,SAACV,GAAD,OAAOZ,EAAgBY,EAAEW,OAAOH,UAC3I,cAACH,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,WAAWK,KAAK,SAASJ,MAAOnB,EAAcoB,YAAa,GAAKC,SAAU,SAACV,GAAD,OAAOV,EAAoBU,EAAEW,OAAOH,UACnJ,eAACK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYR,GAAG,2BAAf,iBACA,cAACS,EAAA,EAAD,CACIC,QAAQ,2BACRV,GAAG,qBACHE,MAAO7B,EACP+B,SAAU,SAACV,GAAD,OAAOpB,EAAWoB,EAAEW,OAAOH,QAJzC,SAMK/B,EAAUwC,KAAI,SAACC,GAAD,OAAU,cAACC,EAAA,EAAD,CAAUX,MAAOU,EAAKE,MAAtB,SAA8BF,EAAKE,gBAGpE,+CArBG,K,mEChBR,SAASC,EAAT,GAA6B,IAARzB,EAAO,EAAPA,KACxB,OACI,cAAC0B,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACI,eAACC,EAAA,EAAD,CAAOC,aAAW,eAAlB,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,mBACA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,iBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,yBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,uBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBACA,cAACD,EAAA,EAAD,CAAWC,MAAM,QAAjB,sBAGR,cAACC,EAAA,EAAD,UACKnC,EAAKqB,KAAI,SAACe,GAAD,OACN,eAACJ,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKU,MAAM,MAAhC,SACKD,EAAInD,OAET,cAACgD,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAIjD,MAC9B,cAAC8C,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAI/C,aAC9B,cAAC4C,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAI7C,WAC9B,cAAC0C,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAI3C,eAC9B,cAACwC,EAAA,EAAD,CAAWC,MAAM,QAAjB,SAA0BE,EAAIrD,QARnBqD,EAAInD,gBCjBpC,SAASqD,EAAT,GAAkC,IAAZ3D,EAAW,EAAXA,SAAW,EACdC,mBAAS,IADK,mBAC7B2D,EAD6B,KACxBC,EADwB,OAEJ5D,oBAAS,GAFL,mBAE7B6D,EAF6B,KAEnBC,EAFmB,KAQpC/C,qBAAU,WACNhB,EAAS4D,KACV,CAAC5D,EAAU4D,IAUd,OACI,sBAAKjC,MAAO,CAACC,QAAS,QAAtB,UAEQkC,EAAW,cAAC/D,EAAD,CAAQC,SAVb,SAACgE,GACfH,GAAO,SAACI,GACJ,MAAM,GAAN,mBAAWA,GAAX,CAAkBD,OAEtBD,GAAY,MAOA,cAACG,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QApB5C,WACZN,GAAY,IAmB8DpC,MAAO,CAAC2C,OAAQ,GAAIzC,MAAO,KAAzF,oBAIR,cAACiB,EAAD,CAAYzB,KAAMuC,OC9BvB,SAASW,EAAT,GAAoC,IAAZvE,EAAW,EAAXA,SAAW,EACZC,qBADY,mBAC/BgC,EAD+B,KACxBuC,EADwB,KAYtC,OACI,cAAC1C,EAAA,EAAD,CACIC,GAAG,4BACHC,MAAM,gBACNC,MAAOA,EACPE,SAdS,SAACV,GACd,IAAIgD,EAAQhD,EAAEW,OAAOH,MACrBuC,EAASC,GACT,IAAMpD,EAAOoD,EAAMC,MAAM,MAAMhC,KAAI,SAAAiC,GAC/B,OAAOA,EAAED,MAAM,KAAKhC,KAAI,SAAAkC,GAAC,OAAIA,EAAEC,aAEnC7E,EAASqB,IASLyD,WAAS,EACTC,KAAK,IACLC,OAAO,SACPb,QAAQ,WACRjC,YAAW,4BAAuB,KAAvB,yBCtBhB,SAAS+C,EAAT,GAA2B,EAAXjF,SAAY,IAAD,EACIC,qBADJ,mBACvBiF,EADuB,KACZC,EADY,OAELlF,qBAFK,mBAEvBmF,EAFuB,KAEjBC,EAFiB,KAI9BrE,qBAAU,WACNC,MAAM,oBAAoBC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UAAQF,MAAK,SAAAG,GAAI,OAAI8D,EAAa9D,QACzE,IAaH,OAAK6D,EAKD,uBAAM5D,YAAU,EAACC,aAAa,MAAMC,SAhBvB,SAACC,GACdA,EAAEC,iBACFT,MAAM,QAAS,CACXqE,OAAQ,SACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAACC,OAAQP,OASsBzD,MAAO,CAACC,QAAS,cAAeC,MAAO,KAA/F,UACI,eAACS,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYR,GAAG,2BAAf,iBACA,cAACS,EAAA,EAAD,CACIC,QAAQ,2BACRV,GAAG,qBACHE,MAAOmD,EACPjD,SAAU,SAACV,GAAD,OAAO4D,EAAS5D,EAAEW,OAAOH,QAJvC,SAMKiD,EAAUxC,KAAI,SAACC,GAAD,OAAU,cAACC,EAAA,EAAD,CAAUX,MAAOU,EAAKgD,OAAtB,SAA+BhD,EAAKgD,iBAGrE,+CAhBG,KCkBAC,MAhCf,WAAgB,IAAD,EACe3F,qBADf,mBACJ4F,EADI,KACGC,EADH,OAEW7F,qBAFX,mBAEJ2D,EAFI,KAECC,EAFD,OAGa5D,qBAHb,mBAGJmF,EAHI,KAGEW,EAHF,KAmBb,OACI,qCACE,cAACpC,EAAD,CAAa3D,SAAU6D,IACvB,cAACU,EAAD,CAAevE,SAAU8F,IAC3B,cAAChE,EAAA,EAAD,CAAWC,GAAG,iBAAiBC,MAAM,OAAOC,MAAOmD,EAAMlD,YAAY,gBAAiBC,SAAU,SAACV,GAAD,OAAOsE,EAAQtE,EAAEW,OAAOH,UACtH,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUC,QAnBhC,WACZpD,MAAM,kCAAmC,CACrCqE,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjB9B,MACAiC,QACAT,YAUsDzD,MAAO,CAAC2C,OAAQ,GAAIzC,MAAO,KAAzF,uBAGE,cAACoD,EAAD,QCxBKe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhF,MAAK,YAAkD,IAA/CiF,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3d141813.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\n\r\nexport function VmForm({callback}) {\r\n    const [isoValues, setIsoValues] = useState();\r\n    const [iso, setIsoForm] = useState();\r\n    const [name, setNameForm] = useState();\r\n    const [ram, setRamForm] = useState();\r\n    const [cpuSockets, setCpuSocketsForm] = useState();\r\n    const [cpuCores, setCpuCoresForm] = useState();\r\n    const [hardDiskSize, setHardDiskSizeForm] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch('/available-iso').then(x => x.json()).then(data => setIsoValues(data));\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        callback({iso, name, ram, cpuCores, cpuSockets, hardDiskSize})\r\n    }\r\n\r\n    if (!isoValues) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmit} style={{display: 'inline-grid', width: 400}}>\r\n            <TextField id=\"standard-basic\" label=\"name\" value={name} placeholder=\"practicum cst\"  onChange={(e) => setNameForm(e.target.value)}/>\r\n            <TextField id=\"standard-basic\" label=\"ram\" type=\"number\" value={ram} placeholder={8196}  onChange={(e) => setRamForm(e.target.value)}/>\r\n            <TextField id=\"standard-basic\" label=\"cpu sockets\" type=\"number\" value={cpuSockets} placeholder={2}  onChange={(e) => setCpuSocketsForm(e.target.value)}/>\r\n            <TextField id=\"standard-basic\" label=\"cpu cores\" type=\"number\" value={cpuCores} placeholder={2}  onChange={(e) => setCpuCoresForm(e.target.value)}/>\r\n            <TextField id=\"standard-basic\" label=\"hdd size\" type=\"number\" value={hardDiskSize} placeholder={60}  onChange={(e) => setHardDiskSizeForm(e.target.value)}/>\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">ISO</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={iso}\r\n                    onChange={(e) => setIsoForm(e.target.value)}\r\n                >\r\n                    {isoValues.map((item) => <MenuItem value={item.volid}>{item.volid}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <button>submit</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n","import {Table, TableCell, TableContainer, TableHead} from \"@material-ui/core\";\r\nimport React from 'react';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport function CurrentVms({data}) {\r\n    return (\r\n        <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>name</TableCell>\r\n                        <TableCell align=\"right\">ram</TableCell>\r\n                        <TableCell align=\"right\">cpu-sockets</TableCell>\r\n                        <TableCell align=\"right\">cpu-cores</TableCell>\r\n                        <TableCell align=\"right\">hdd-size</TableCell>\r\n                        <TableCell align=\"right\">iso</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data.map((row) => (\r\n                        <TableRow key={row.name}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                                {row.name}\r\n                            </TableCell>\r\n                            <TableCell align=\"right\">{row.ram}</TableCell>\r\n                            <TableCell align=\"right\">{row.cpuSockets}</TableCell>\r\n                            <TableCell align=\"right\">{row.cpuCores}</TableCell>\r\n                            <TableCell align=\"right\">{row.hardDiskSize}</TableCell>\r\n                            <TableCell align=\"right\">{row.iso}</TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n}\r\n","import {VmForm} from \"./vmForm\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {CurrentVms} from \"./current-vms\";\r\n\r\nexport function VmContainer({callback}) {\r\n    const [vms, setVms] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n\r\n    const onClick = () => {\r\n        setFormOpen(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        callback(vms)\r\n    }, [callback, vms])\r\n\r\n\r\n    const callbackf = (vm) => {\r\n        setVms((state) => {\r\n            return [...state, vm]\r\n        })\r\n        setFormOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div style={{display: 'flex'}}>\r\n            {\r\n                formOpen ? <VmForm callback={callbackf}/> :\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={onClick} style={{height: 50, width: 200}}>\r\n                        ADD VM\r\n                    </Button>\r\n            }\r\n            <CurrentVms data={vms}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nexport function UserContainer({callback}) {\r\n    const [value, setValue] = useState();\r\n\r\n    const onChange = (e) => {\r\n        let input = e.target.value;\r\n        setValue(input);\r\n        const data = input.split('\\n').map(a => {\r\n            return a.split(',').map(q => q.trim())\r\n        })\r\n        callback(data)\r\n    }\r\n\r\n    return (\r\n        <TextField\r\n            id=\"outlined-multiline-static\"\r\n            label=\"User & groups\"\r\n            value={value}\r\n            onChange={onChange}\r\n            multiline\r\n            rows=\"4\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            placeholder={`mike, johan, james${'\\n'}quint, caleb, james`}\r\n        />\r\n    );\r\n}\r\n","import {useState, useEffect} from \"react\";\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\n\r\nexport function Pools({callback}) {\r\n    const [available, setAvailable] = useState();\r\n    const [pool, setPools] = useState();\r\n\r\n    useEffect(() => {\r\n        fetch('/available-pools').then(x => x.json()).then(data => setAvailable(data));\r\n    }, [])\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        fetch('/pool', {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({poolid: pool})\r\n        })\r\n    }\r\n\r\n    if (!available) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <form noValidate autoComplete=\"off\" onSubmit={onSubmit} style={{display: 'inline-grid', width: 400}}>\r\n            <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\">ISO</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={pool}\r\n                    onChange={(e) => setPools(e.target.value)}\r\n                >\r\n                    {available.map((item) => <MenuItem value={item.poolid}>{item.poolid}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n            <button>Delete</button>\r\n        </form>\r\n\r\n    );\r\n}\r\n","import './App.css';\nimport {Button, TextField} from \"@material-ui/core\";\nimport {useState} from \"react\";\nimport {VmContainer} from \"./components/vm-container\";\nimport {UserContainer} from \"./components/user-container\";\nimport {Pools} from \"./components/pools\";\n\n\n\nfunction App() {\n    const [users, setUsers] = useState();\n    const [vms, setVms] = useState();\n    const [pool, setPool] = useState();\n\n    const onClick = () => {\n        fetch('http://localhost:5000/create-vm', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                vms,\n                users,\n                pool,\n            })\n        })\n    }\n\n  return (\n      <>\n        <VmContainer callback={setVms}/>\n        <UserContainer callback={setUsers}/>\n      <TextField id=\"standard-basic\" label=\"pool\" value={pool} placeholder=\"practicum cst\"  onChange={(e) => setPool(e.target.value)}/>\n        <Button variant=\"contained\" color=\"primary\" onClick={onClick} style={{height: 50, width: 200}}>\n          DO MAGIC!\n        </Button>\n          <Pools/>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}